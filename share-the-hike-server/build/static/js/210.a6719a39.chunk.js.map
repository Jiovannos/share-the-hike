{"version":3,"file":"static/js/210.a6719a39.chunk.js","mappings":"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","sources":["webpack://share-the-hike/./src/presentation/layout/modals/sign/signup/SignupModal.module.css?ecc1","presentation/layout/modals/sign/signup/SignupModal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"SignupModal_modal__B9vS6\",\"backdrop\":\"SignupModal_backdrop__qxJcd\",\"changeMode\":\"SignupModal_changeMode__TD3e9\",\"errorMessage\":\"SignupModal_errorMessage__l0KP4\"};","import css from \"./SignupModal.module.css\";\r\nimport { UserSignupData } from \"./types\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  toggleLoginModal,\r\n  toggleSignupModal,\r\n} from \"presentation/redux/visibilitySlice\";\r\n\r\nconst SignupModal: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector((state: any) => state.visibility.signupModal.open);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [signupData, setSignupData] = useState<UserSignupData>({\r\n    userName: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const closeModal = () => {\r\n    dispatch(toggleSignupModal(false));\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSignupData({ ...signupData, [e.target.name]: e.target.value });\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (signupData.password !== confirmPassword) {\r\n      setErrorMsg(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_BASE_URL}server/auth/signup`,\r\n        signupData\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"Signup successful\");\r\n        setErrorMsg(\"\");\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrorMsg(\"User already exists.\");\r\n      } else {\r\n        console.log(error);\r\n        setErrorMsg(\"An unknown error occurred.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIHaveAccountClick = () => {\r\n    dispatch(toggleSignupModal(false));\r\n    dispatch(toggleLoginModal(true));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ display: open ? \"flex\" : \"none\" }}\r\n      className={css.backdrop}\r\n      onClick={closeModal}\r\n    >\r\n      <div className={css.modal} onClick={(e) => e.stopPropagation()}>\r\n        <h2>Sign Up</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            placeholder=\"Username\"\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n          />\r\n          <input type=\"password\" placeholder=\"Confirm Password\" />\r\n          <button type=\"submit\">Sign Up</button>\r\n        </form>\r\n        {errorMsg && <p className={css.errorMessage}>{errorMsg}</p>}\r\n        <h5 onClick={handleIHaveAccountClick} className={css.changeMode}>\r\n          I already have an account. Log In\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupModal;\r\n"],"names":["dispatch","useDispatch","open","useSelector","state","visibility","signupModal","_useState","useState","_useState2","_slicedToArray","confirmPassword","setConfirmPassword","_useState3","userName","password","_useState4","signupData","setSignupData","_useState5","_useState6","errorMsg","setErrorMsg","handleChange","e","_objectSpread","_defineProperty","target","name","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","abrupt","axios","concat","process","sent","status","console","log","t0","response","stop","_x","apply","arguments","_jsx","style","display","className","css","onClick","toggleSignupModal","children","_jsxs","stopPropagation","onSubmit","type","placeholder","onChange","toggleLoginModal"],"sourceRoot":""}